name: CI - Quality & Security Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.13, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with ruff
      run: |
        ruff check .
        ruff format --check .
    
    - name: Type check with mypy
      run: |
        mypy app/ --ignore-missing-imports
    
    - name: Test with pytest and coverage
      run: |
        pytest --cov=app --cov-report=xml --cov-report=term-missing
    
    - name: Security scan with bandit
      run: |
        bandit -r app/ -f json -o bandit-report.json || true
        bandit -r app/ -ll
    
    - name: Audit dependencies with pip-audit
      run: |
        pip-audit --desc --format=json --output=pip-audit-report.json || true
        pip-audit --desc
    
    - name: Check for unused dependencies with deptry
      run: |
        deptry . --output-format=json --output-file=deptry-report.json || true
        deptry .
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.13'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Upload security reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-reports-${{ matrix.python-version }}
        path: |
          bandit-report.json
          pip-audit-report.json
          deptry-report.json
        retention-days: 30

  security-summary:
    runs-on: ubuntu-latest
    needs: quality-checks
    if: always()
    
    steps:
    - name: Download security reports
      uses: actions/download-artifact@v4
      with:
        pattern: security-reports-*
        merge-multiple: true
    
    - name: Security Summary
      run: |
        echo "## ðŸ”’ Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "bandit-report.json" ]; then
          echo "### Bandit Security Issues" >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          cat bandit-report.json >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f "pip-audit-report.json" ]; then
          echo "### Dependency Vulnerabilities" >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          cat pip-audit-report.json >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f "deptry-report.json" ]; then
          echo "### Dependency Issues" >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          cat deptry-report.json >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi
